{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Desktop\\\\sid\\\\REACT_MAX\\\\food_order_app\\\\src\\\\Components\\\\UI\\\\Input.js\";\nimport classes from './Input.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.input,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.input.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: props.input.id,\n      ...props.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}; // think like props.something is there , so we are acepting a attr named something in the custom component \n// html tag \n// kim input is a object  we are expecting and this object will cintain all the attr that are supposed to be in a \n// input tag , this is so as to configure elemenst from outside\n\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/singh/Desktop/sid/REACT_MAX/food_order_app/src/Components/UI/Input.js"],"names":["classes","Input","props","input","id","label"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,sBACI;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACG,KAAxB;AAAA,4BACI;AAAO,MAAA,OAAO,EAAED,KAAK,CAACC,KAAN,CAAYC,EAA5B;AAAA,gBACKF,KAAK,CAACG;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,EAAE,EAAEH,KAAK,CAACC,KAAN,CAAYC,EAAvB;AAAA,SAA+BF,KAAK,CAACC;AAArC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD,C,CAaA;AACA;AAEA;AACA;;;KAjBMF,K;AAmBN,eAAeA,KAAf","sourcesContent":["import classes from './Input.module.css'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <div className={classes.input}>\r\n            <label htmlFor={props.input.id}>\r\n                {props.label}\r\n            </label>\r\n            <input id={props.input.id} {...props.input}/>\r\n            {/* it works like suppose input has {type:'text'} , then this will go as <input type='text' />\r\n            along with id. */}\r\n        </div>\r\n    );\r\n}\r\n\r\n// think like props.something is there , so we are acepting a attr named something in the custom component \r\n// html tag \r\n\r\n// kim input is a object  we are expecting and this object will cintain all the attr that are supposed to be in a \r\n// input tag , this is so as to configure elemenst from outside\r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}